<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="453.00"> </text><svg id="frames" x="10" width="1180" total_samples="86"><g><title>ntdll`CsrClientConnectToServer (1 samples, 1.16%)</title><rect x="0.0000%" y="341" width="1.1628%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>ntdll`RtlWaitOnAddress (1 samples, 1.16%)</title><rect x="0.0000%" y="325" width="1.1628%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="335.50"></text></g><g><title>ntdll`NtCreateWorkerFactory (1 samples, 1.16%)</title><rect x="0.0000%" y="309" width="1.1628%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="319.50"></text></g><g><title>ntdll`LdrGetDllHandleEx (1 samples, 1.16%)</title><rect x="1.1628%" y="341" width="1.1628%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="1.4128%" y="351.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (1 samples, 1.16%)</title><rect x="1.1628%" y="325" width="1.1628%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="1.4128%" y="335.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (1 samples, 1.16%)</title><rect x="1.1628%" y="309" width="1.1628%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="1.4128%" y="319.50"></text></g><g><title>ntdll`RtlDowncaseUnicodeChar (1 samples, 1.16%)</title><rect x="2.3256%" y="325" width="1.1628%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="2.5756%" y="335.50"></text></g><g><title>ntdll`RtlWalkHeap (1 samples, 1.16%)</title><rect x="2.3256%" y="309" width="1.1628%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="2.5756%" y="319.50"></text></g><g><title>ntdll`ZwOpenKey (1 samples, 1.16%)</title><rect x="2.3256%" y="293" width="1.1628%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="2.5756%" y="303.50"></text></g><g><title>ntdll`LdrInitShimEngineDynamic (2 samples, 2.33%)</title><rect x="2.3256%" y="341" width="2.3256%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="2"/><text x="2.5756%" y="351.50">n..</text></g><g><title>ntdll`RtlInitCodePageTable (1 samples, 1.16%)</title><rect x="3.4884%" y="325" width="1.1628%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="3.7384%" y="335.50"></text></g><g><title>ntdll`NtQueryValueKey (1 samples, 1.16%)</title><rect x="3.4884%" y="309" width="1.1628%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="3.7384%" y="319.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 1.16%)</title><rect x="4.6512%" y="245" width="1.1628%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="1"/><text x="4.9012%" y="255.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 1.16%)</title><rect x="4.6512%" y="229" width="1.1628%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="1"/><text x="4.9012%" y="239.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 1.16%)</title><rect x="4.6512%" y="213" width="1.1628%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="1"/><text x="4.9012%" y="223.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 1.16%)</title><rect x="5.8140%" y="245" width="1.1628%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="1"/><text x="6.0640%" y="255.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 1.16%)</title><rect x="5.8140%" y="229" width="1.1628%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="1"/><text x="6.0640%" y="239.50"></text></g><g><title>ntdll`RtlCopyUnicodeString (1 samples, 1.16%)</title><rect x="5.8140%" y="213" width="1.1628%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="6.0640%" y="223.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (2 samples, 2.33%)</title><rect x="6.9767%" y="229" width="2.3256%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="2"/><text x="7.2267%" y="239.50">n..</text></g><g><title>ntdll`LdrGetDllHandleByMapping (6 samples, 6.98%)</title><rect x="4.6512%" y="293" width="6.9767%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="6"/><text x="4.9012%" y="303.50">ntdll`Ldr..</text></g><g><title>ntdll`LdrAddRefDll (6 samples, 6.98%)</title><rect x="4.6512%" y="277" width="6.9767%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="6"/><text x="4.9012%" y="287.50">ntdll`Ldr..</text></g><g><title>ntdll`LdrControlFlowGuardEnforced (6 samples, 6.98%)</title><rect x="4.6512%" y="261" width="6.9767%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="6"/><text x="4.9012%" y="271.50">ntdll`Ldr..</text></g><g><title>ntdll`RtlImageNtHeaderEx (4 samples, 4.65%)</title><rect x="6.9767%" y="245" width="4.6512%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="4"/><text x="7.2267%" y="255.50">ntdll..</text></g><g><title>ntdll`RtlImageNtHeaderEx (2 samples, 2.33%)</title><rect x="9.3023%" y="229" width="2.3256%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="2"/><text x="9.5523%" y="239.50">n..</text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (1 samples, 1.16%)</title><rect x="10.4651%" y="213" width="1.1628%" height="15" fill="rgb(241,131,45)" fg:x="9" fg:w="1"/><text x="10.7151%" y="223.50"></text></g><g><title>ntdll`LdrAddRefDll (1 samples, 1.16%)</title><rect x="10.4651%" y="197" width="1.1628%" height="15" fill="rgb(249,31,29)" fg:x="9" fg:w="1"/><text x="10.7151%" y="207.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 1.16%)</title><rect x="10.4651%" y="181" width="1.1628%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="1"/><text x="10.7151%" y="191.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 1.16%)</title><rect x="10.4651%" y="165" width="1.1628%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="1"/><text x="10.7151%" y="175.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 1.16%)</title><rect x="10.4651%" y="149" width="1.1628%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="1"/><text x="10.7151%" y="159.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 1.16%)</title><rect x="10.4651%" y="133" width="1.1628%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="1"/><text x="10.7151%" y="143.50"></text></g><g><title>ntdll`LdrGetDllHandleEx (1 samples, 1.16%)</title><rect x="11.6279%" y="293" width="1.1628%" height="15" fill="rgb(209,103,24)" fg:x="10" fg:w="1"/><text x="11.8779%" y="303.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (1 samples, 1.16%)</title><rect x="11.6279%" y="277" width="1.1628%" height="15" fill="rgb(229,88,8)" fg:x="10" fg:w="1"/><text x="11.8779%" y="287.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (1 samples, 1.16%)</title><rect x="11.6279%" y="261" width="1.1628%" height="15" fill="rgb(213,181,19)" fg:x="10" fg:w="1"/><text x="11.8779%" y="271.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 1.16%)</title><rect x="12.7907%" y="245" width="1.1628%" height="15" fill="rgb(254,191,54)" fg:x="11" fg:w="1"/><text x="13.0407%" y="255.50"></text></g><g><title>kernel32`BaseThreadInitThunk (1 samples, 1.16%)</title><rect x="12.7907%" y="229" width="1.1628%" height="15" fill="rgb(241,83,37)" fg:x="11" fg:w="1"/><text x="13.0407%" y="239.50"></text></g><g><title>kernel32`BaseThreadInitThunk (1 samples, 1.16%)</title><rect x="12.7907%" y="213" width="1.1628%" height="15" fill="rgb(233,36,39)" fg:x="11" fg:w="1"/><text x="13.0407%" y="223.50"></text></g><g><title>kernel32`uaw_wcsrchr (1 samples, 1.16%)</title><rect x="12.7907%" y="197" width="1.1628%" height="15" fill="rgb(226,3,54)" fg:x="11" fg:w="1"/><text x="13.0407%" y="207.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 1.16%)</title><rect x="12.7907%" y="181" width="1.1628%" height="15" fill="rgb(245,192,40)" fg:x="11" fg:w="1"/><text x="13.0407%" y="191.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 1.16%)</title><rect x="12.7907%" y="165" width="1.1628%" height="15" fill="rgb(238,167,29)" fg:x="11" fg:w="1"/><text x="13.0407%" y="175.50"></text></g><g><title>ntdll`LdrGetDllPath (1 samples, 1.16%)</title><rect x="12.7907%" y="149" width="1.1628%" height="15" fill="rgb(232,182,51)" fg:x="11" fg:w="1"/><text x="13.0407%" y="159.50"></text></g><g><title>ntdll`NtTraceControl (1 samples, 1.16%)</title><rect x="12.7907%" y="133" width="1.1628%" height="15" fill="rgb(231,60,39)" fg:x="11" fg:w="1"/><text x="13.0407%" y="143.50"></text></g><g><title>KernelBase`GetStagedPackageOrigin (1 samples, 1.16%)</title><rect x="13.9535%" y="165" width="1.1628%" height="15" fill="rgb(208,69,12)" fg:x="12" fg:w="1"/><text x="14.2035%" y="175.50"></text></g><g><title>KernelBase`GetStagedPackageOrigin (1 samples, 1.16%)</title><rect x="13.9535%" y="149" width="1.1628%" height="15" fill="rgb(235,93,37)" fg:x="12" fg:w="1"/><text x="14.2035%" y="159.50"></text></g><g><title>KernelBase`GetCPHashNode (1 samples, 1.16%)</title><rect x="13.9535%" y="133" width="1.1628%" height="15" fill="rgb(213,116,39)" fg:x="12" fg:w="1"/><text x="14.2035%" y="143.50"></text></g><g><title>KernelBase`CreateMutexExW (1 samples, 1.16%)</title><rect x="13.9535%" y="117" width="1.1628%" height="15" fill="rgb(222,207,29)" fg:x="12" fg:w="1"/><text x="14.2035%" y="127.50"></text></g><g><title>ntdll`NtCreateMutant (1 samples, 1.16%)</title><rect x="13.9535%" y="101" width="1.1628%" height="15" fill="rgb(206,96,30)" fg:x="12" fg:w="1"/><text x="14.2035%" y="111.50"></text></g><g><title>ntdll`ZwCreateSection (1 samples, 1.16%)</title><rect x="15.1163%" y="133" width="1.1628%" height="15" fill="rgb(218,138,4)" fg:x="13" fg:w="1"/><text x="15.3663%" y="143.50"></text></g><g><title>KernelBase`GetCPHashNode (3 samples, 3.49%)</title><rect x="13.9535%" y="181" width="3.4884%" height="15" fill="rgb(250,191,14)" fg:x="12" fg:w="3"/><text x="14.2035%" y="191.50">Ker..</text></g><g><title>ntdll`CsrClientConnectToServer (2 samples, 2.33%)</title><rect x="15.1163%" y="165" width="2.3256%" height="15" fill="rgb(239,60,40)" fg:x="13" fg:w="2"/><text x="15.3663%" y="175.50">n..</text></g><g><title>ntdll`RtlGetNtProductType (2 samples, 2.33%)</title><rect x="15.1163%" y="149" width="2.3256%" height="15" fill="rgb(206,27,48)" fg:x="13" fg:w="2"/><text x="15.3663%" y="159.50">n..</text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 1.16%)</title><rect x="16.2791%" y="133" width="1.1628%" height="15" fill="rgb(225,35,8)" fg:x="14" fg:w="1"/><text x="16.5291%" y="143.50"></text></g><g><title>KernelBase`GetProcessMemoryInfo (1 samples, 1.16%)</title><rect x="17.4419%" y="181" width="1.1628%" height="15" fill="rgb(250,213,24)" fg:x="15" fg:w="1"/><text x="17.6919%" y="191.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 1.16%)</title><rect x="17.4419%" y="165" width="1.1628%" height="15" fill="rgb(247,123,22)" fg:x="15" fg:w="1"/><text x="17.6919%" y="175.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 1.16%)</title><rect x="17.4419%" y="149" width="1.1628%" height="15" fill="rgb(231,138,38)" fg:x="15" fg:w="1"/><text x="17.6919%" y="159.50"></text></g><g><title>ntdll`NtTraceControl (1 samples, 1.16%)</title><rect x="17.4419%" y="133" width="1.1628%" height="15" fill="rgb(231,145,46)" fg:x="15" fg:w="1"/><text x="17.6919%" y="143.50"></text></g><g><title>KernelBase`GetProductInfo (1 samples, 1.16%)</title><rect x="18.6047%" y="181" width="1.1628%" height="15" fill="rgb(251,118,11)" fg:x="16" fg:w="1"/><text x="18.8547%" y="191.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 1.16%)</title><rect x="18.6047%" y="165" width="1.1628%" height="15" fill="rgb(217,147,25)" fg:x="16" fg:w="1"/><text x="18.8547%" y="175.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 1.16%)</title><rect x="18.6047%" y="149" width="1.1628%" height="15" fill="rgb(247,81,37)" fg:x="16" fg:w="1"/><text x="18.8547%" y="159.50"></text></g><g><title>ntdll`NtTraceControl (1 samples, 1.16%)</title><rect x="18.6047%" y="133" width="1.1628%" height="15" fill="rgb(209,12,38)" fg:x="16" fg:w="1"/><text x="18.8547%" y="143.50"></text></g><g><title>ntdll`LdrLoadDll (15 samples, 17.44%)</title><rect x="4.6512%" y="341" width="17.4419%" height="15" fill="rgb(227,1,9)" fg:x="4" fg:w="15"/><text x="4.9012%" y="351.50">ntdll`LdrLoadDll</text></g><g><title>ntdll`RtlUnicodeToCustomCPN (15 samples, 17.44%)</title><rect x="4.6512%" y="325" width="17.4419%" height="15" fill="rgb(248,47,43)" fg:x="4" fg:w="15"/><text x="4.9012%" y="335.50">ntdll`RtlUnicodeToCustomCPN</text></g><g><title>ntdll`RtlImageRvaToSection (15 samples, 17.44%)</title><rect x="4.6512%" y="309" width="17.4419%" height="15" fill="rgb(221,10,30)" fg:x="4" fg:w="15"/><text x="4.9012%" y="319.50">ntdll`RtlImageRvaToSection</text></g><g><title>ntdll`RtlCopyUnicodeString (8 samples, 9.30%)</title><rect x="12.7907%" y="293" width="9.3023%" height="15" fill="rgb(210,229,1)" fg:x="11" fg:w="8"/><text x="13.0407%" y="303.50">ntdll`RtlCopy..</text></g><g><title>ntdll`RtlEnumerateEntryHashTable (8 samples, 9.30%)</title><rect x="12.7907%" y="277" width="9.3023%" height="15" fill="rgb(222,148,37)" fg:x="11" fg:w="8"/><text x="13.0407%" y="287.50">ntdll`RtlEnum..</text></g><g><title>ntdll`RtlEnumerateEntryHashTable (8 samples, 9.30%)</title><rect x="12.7907%" y="261" width="9.3023%" height="15" fill="rgb(234,67,33)" fg:x="11" fg:w="8"/><text x="13.0407%" y="271.50">ntdll`RtlEnum..</text></g><g><title>ntdll`RtlEnumerateEntryHashTable (7 samples, 8.14%)</title><rect x="13.9535%" y="245" width="8.1395%" height="15" fill="rgb(247,98,35)" fg:x="12" fg:w="7"/><text x="14.2035%" y="255.50">ntdll`RtlEn..</text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (7 samples, 8.14%)</title><rect x="13.9535%" y="229" width="8.1395%" height="15" fill="rgb(247,138,52)" fg:x="12" fg:w="7"/><text x="14.2035%" y="239.50">ntdll`RtlAc..</text></g><g><title>KernelBase`GetProcessHeap (7 samples, 8.14%)</title><rect x="13.9535%" y="213" width="8.1395%" height="15" fill="rgb(213,79,30)" fg:x="12" fg:w="7"/><text x="14.2035%" y="223.50">KernelBase`..</text></g><g><title>KernelBase`GetProcessHeap (7 samples, 8.14%)</title><rect x="13.9535%" y="197" width="8.1395%" height="15" fill="rgb(246,177,23)" fg:x="12" fg:w="7"/><text x="14.2035%" y="207.50">KernelBase`..</text></g><g><title>KernelBase`PathIsFileSpecW (2 samples, 2.33%)</title><rect x="19.7674%" y="181" width="2.3256%" height="15" fill="rgb(230,62,27)" fg:x="17" fg:w="2"/><text x="20.0174%" y="191.50">K..</text></g><g><title>KernelBase`PathIsFileSpecW (2 samples, 2.33%)</title><rect x="19.7674%" y="165" width="2.3256%" height="15" fill="rgb(216,154,8)" fg:x="17" fg:w="2"/><text x="20.0174%" y="175.50">K..</text></g><g><title>ntdll`NtCreateFile (2 samples, 2.33%)</title><rect x="19.7674%" y="149" width="2.3256%" height="15" fill="rgb(244,35,45)" fg:x="17" fg:w="2"/><text x="20.0174%" y="159.50">n..</text></g><g><title>ntdll`RtlCreateEnvironmentEx (1 samples, 1.16%)</title><rect x="22.0930%" y="341" width="1.1628%" height="15" fill="rgb(251,115,12)" fg:x="19" fg:w="1"/><text x="22.3430%" y="351.50"></text></g><g><title>ntdll`RtlCreateEnvironmentEx (1 samples, 1.16%)</title><rect x="22.0930%" y="325" width="1.1628%" height="15" fill="rgb(240,54,50)" fg:x="19" fg:w="1"/><text x="22.3430%" y="335.50"></text></g><g><title>ntdll`RtlQueryEnvironmentVariable_U (1 samples, 1.16%)</title><rect x="22.0930%" y="309" width="1.1628%" height="15" fill="rgb(233,84,52)" fg:x="19" fg:w="1"/><text x="22.3430%" y="319.50"></text></g><g><title>ntdll`RtlQueryEnvironmentVariable (1 samples, 1.16%)</title><rect x="22.0930%" y="293" width="1.1628%" height="15" fill="rgb(207,117,47)" fg:x="19" fg:w="1"/><text x="22.3430%" y="303.50"></text></g><g><title>ntdll`RtlCreateEnvironmentEx (1 samples, 1.16%)</title><rect x="22.0930%" y="277" width="1.1628%" height="15" fill="rgb(249,43,39)" fg:x="19" fg:w="1"/><text x="22.3430%" y="287.50"></text></g><g><title>ntdll`RtlCreateEnvironmentEx (1 samples, 1.16%)</title><rect x="22.0930%" y="261" width="1.1628%" height="15" fill="rgb(209,38,44)" fg:x="19" fg:w="1"/><text x="22.3430%" y="271.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 1.16%)</title><rect x="22.0930%" y="245" width="1.1628%" height="15" fill="rgb(236,212,23)" fg:x="19" fg:w="1"/><text x="22.3430%" y="255.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 1.16%)</title><rect x="22.0930%" y="229" width="1.1628%" height="15" fill="rgb(242,79,21)" fg:x="19" fg:w="1"/><text x="22.3430%" y="239.50"></text></g><g><title>ntdll`RtlGetNtProductType (1 samples, 1.16%)</title><rect x="22.0930%" y="213" width="1.1628%" height="15" fill="rgb(211,96,35)" fg:x="19" fg:w="1"/><text x="22.3430%" y="223.50"></text></g><g><title>ntdll`RtlDestroyHeap (1 samples, 1.16%)</title><rect x="22.0930%" y="197" width="1.1628%" height="15" fill="rgb(253,215,40)" fg:x="19" fg:w="1"/><text x="22.3430%" y="207.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 1.16%)</title><rect x="22.0930%" y="181" width="1.1628%" height="15" fill="rgb(211,81,21)" fg:x="19" fg:w="1"/><text x="22.3430%" y="191.50"></text></g><g><title>ntdll`RtlQueryResourcePolicy (1 samples, 1.16%)</title><rect x="22.0930%" y="165" width="1.1628%" height="15" fill="rgb(208,190,38)" fg:x="19" fg:w="1"/><text x="22.3430%" y="175.50"></text></g><g><title>ntdll`RtlRunOnceExecuteOnce (1 samples, 1.16%)</title><rect x="22.0930%" y="149" width="1.1628%" height="15" fill="rgb(235,213,38)" fg:x="19" fg:w="1"/><text x="22.3430%" y="159.50"></text></g><g><title>ntdll`RtlGetGroupSecurityDescriptor (1 samples, 1.16%)</title><rect x="22.0930%" y="133" width="1.1628%" height="15" fill="rgb(237,122,38)" fg:x="19" fg:w="1"/><text x="22.3430%" y="143.50"></text></g><g><title>ntdll`ZwOpenKey (1 samples, 1.16%)</title><rect x="22.0930%" y="117" width="1.1628%" height="15" fill="rgb(244,218,35)" fg:x="19" fg:w="1"/><text x="22.3430%" y="127.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 1.16%)</title><rect x="23.2558%" y="293" width="1.1628%" height="15" fill="rgb(240,68,47)" fg:x="20" fg:w="1"/><text x="23.5058%" y="303.50"></text></g><g><title>vcruntime140`_CxxFrameHandler3 (1 samples, 1.16%)</title><rect x="23.2558%" y="277" width="1.1628%" height="15" fill="rgb(210,16,53)" fg:x="20" fg:w="1"/><text x="23.5058%" y="287.50"></text></g><g><title>vcruntime140`set_se_translator (1 samples, 1.16%)</title><rect x="23.2558%" y="261" width="1.1628%" height="15" fill="rgb(235,124,12)" fg:x="20" fg:w="1"/><text x="23.5058%" y="271.50"></text></g><g><title>ucrtbase`free_base (1 samples, 1.16%)</title><rect x="24.4186%" y="229" width="1.1628%" height="15" fill="rgb(224,169,11)" fg:x="21" fg:w="1"/><text x="24.6686%" y="239.50"></text></g><g><title>ucrtbase`free_base (1 samples, 1.16%)</title><rect x="24.4186%" y="213" width="1.1628%" height="15" fill="rgb(250,166,2)" fg:x="21" fg:w="1"/><text x="24.6686%" y="223.50"></text></g><g><title>ucrtbase`free_base (1 samples, 1.16%)</title><rect x="24.4186%" y="197" width="1.1628%" height="15" fill="rgb(242,216,29)" fg:x="21" fg:w="1"/><text x="24.6686%" y="207.50"></text></g><g><title>ucrtbase`free_base (1 samples, 1.16%)</title><rect x="24.4186%" y="181" width="1.1628%" height="15" fill="rgb(230,116,27)" fg:x="21" fg:w="1"/><text x="24.6686%" y="191.50"></text></g><g><title>ucrtbase`_stdio_common_vsnwprintf_s (1 samples, 1.16%)</title><rect x="24.4186%" y="165" width="1.1628%" height="15" fill="rgb(228,99,48)" fg:x="21" fg:w="1"/><text x="24.6686%" y="175.50"></text></g><g><title>ucrtbase`wsetlocale (1 samples, 1.16%)</title><rect x="24.4186%" y="149" width="1.1628%" height="15" fill="rgb(253,11,6)" fg:x="21" fg:w="1"/><text x="24.6686%" y="159.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (3 samples, 3.49%)</title><rect x="23.2558%" y="341" width="3.4884%" height="15" fill="rgb(247,143,39)" fg:x="20" fg:w="3"/><text x="23.5058%" y="351.50">ntd..</text></g><g><title>ntdll`RtlEnumerateEntryHashTable (3 samples, 3.49%)</title><rect x="23.2558%" y="325" width="3.4884%" height="15" fill="rgb(236,97,10)" fg:x="20" fg:w="3"/><text x="23.5058%" y="335.50">ntd..</text></g><g><title>ntdll`RtlEnumerateEntryHashTable (3 samples, 3.49%)</title><rect x="23.2558%" y="309" width="3.4884%" height="15" fill="rgb(233,208,19)" fg:x="20" fg:w="3"/><text x="23.5058%" y="319.50">ntd..</text></g><g><title>ntdll`RtlEnumerateEntryHashTable (2 samples, 2.33%)</title><rect x="24.4186%" y="293" width="2.3256%" height="15" fill="rgb(216,164,2)" fg:x="21" fg:w="2"/><text x="24.6686%" y="303.50">n..</text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (2 samples, 2.33%)</title><rect x="24.4186%" y="277" width="2.3256%" height="15" fill="rgb(220,129,5)" fg:x="21" fg:w="2"/><text x="24.6686%" y="287.50">n..</text></g><g><title>ucrtbase`free_base (2 samples, 2.33%)</title><rect x="24.4186%" y="261" width="2.3256%" height="15" fill="rgb(242,17,10)" fg:x="21" fg:w="2"/><text x="24.6686%" y="271.50">u..</text></g><g><title>ucrtbase`free_base (2 samples, 2.33%)</title><rect x="24.4186%" y="245" width="2.3256%" height="15" fill="rgb(242,107,0)" fg:x="21" fg:w="2"/><text x="24.6686%" y="255.50">u..</text></g><g><title>ucrtbase`wcsstr (1 samples, 1.16%)</title><rect x="25.5814%" y="229" width="1.1628%" height="15" fill="rgb(251,28,31)" fg:x="22" fg:w="1"/><text x="25.8314%" y="239.50"></text></g><g><title>ucrtbase`_report_gsfailure (1 samples, 1.16%)</title><rect x="25.5814%" y="213" width="1.1628%" height="15" fill="rgb(233,223,10)" fg:x="22" fg:w="1"/><text x="25.8314%" y="223.50"></text></g><g><title>ntdll`RtlGetCurrentDirectory_U (2 samples, 2.33%)</title><rect x="26.7442%" y="341" width="2.3256%" height="15" fill="rgb(215,21,27)" fg:x="23" fg:w="2"/><text x="26.9942%" y="351.50">n..</text></g><g><title>ntdll`RtlGetCurrentDirectory_U (2 samples, 2.33%)</title><rect x="26.7442%" y="325" width="2.3256%" height="15" fill="rgb(232,23,21)" fg:x="23" fg:w="2"/><text x="26.9942%" y="335.50">n..</text></g><g><title>ntdll`NtOpenFile (2 samples, 2.33%)</title><rect x="26.7442%" y="309" width="2.3256%" height="15" fill="rgb(244,5,23)" fg:x="23" fg:w="2"/><text x="26.9942%" y="319.50">n..</text></g><g><title>ntdll`RtlIdentifierAuthoritySid (1 samples, 1.16%)</title><rect x="29.0698%" y="341" width="1.1628%" height="15" fill="rgb(226,81,46)" fg:x="25" fg:w="1"/><text x="29.3198%" y="351.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 1.16%)</title><rect x="29.0698%" y="325" width="1.1628%" height="15" fill="rgb(247,70,30)" fg:x="25" fg:w="1"/><text x="29.3198%" y="335.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 1.16%)</title><rect x="29.0698%" y="309" width="1.1628%" height="15" fill="rgb(212,68,19)" fg:x="25" fg:w="1"/><text x="29.3198%" y="319.50"></text></g><g><title>ntdll`LdrGetDllPath (1 samples, 1.16%)</title><rect x="29.0698%" y="293" width="1.1628%" height="15" fill="rgb(240,187,13)" fg:x="25" fg:w="1"/><text x="29.3198%" y="303.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 1.16%)</title><rect x="30.2326%" y="261" width="1.1628%" height="15" fill="rgb(223,113,26)" fg:x="26" fg:w="1"/><text x="30.4826%" y="271.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 1.16%)</title><rect x="30.2326%" y="245" width="1.1628%" height="15" fill="rgb(206,192,2)" fg:x="26" fg:w="1"/><text x="30.4826%" y="255.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 1.16%)</title><rect x="30.2326%" y="229" width="1.1628%" height="15" fill="rgb(241,108,4)" fg:x="26" fg:w="1"/><text x="30.4826%" y="239.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (2 samples, 2.33%)</title><rect x="30.2326%" y="341" width="2.3256%" height="15" fill="rgb(247,173,49)" fg:x="26" fg:w="2"/><text x="30.4826%" y="351.50">n..</text></g><g><title>ntdll`RtlImageNtHeaderEx (2 samples, 2.33%)</title><rect x="30.2326%" y="325" width="2.3256%" height="15" fill="rgb(224,114,35)" fg:x="26" fg:w="2"/><text x="30.4826%" y="335.50">n..</text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (2 samples, 2.33%)</title><rect x="30.2326%" y="309" width="2.3256%" height="15" fill="rgb(245,159,27)" fg:x="26" fg:w="2"/><text x="30.4826%" y="319.50">n..</text></g><g><title>ntdll`LdrAddRefDll (2 samples, 2.33%)</title><rect x="30.2326%" y="293" width="2.3256%" height="15" fill="rgb(245,172,44)" fg:x="26" fg:w="2"/><text x="30.4826%" y="303.50">n..</text></g><g><title>ntdll`LdrControlFlowGuardEnforced (2 samples, 2.33%)</title><rect x="30.2326%" y="277" width="2.3256%" height="15" fill="rgb(236,23,11)" fg:x="26" fg:w="2"/><text x="30.4826%" y="287.50">n..</text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 1.16%)</title><rect x="31.3953%" y="261" width="1.1628%" height="15" fill="rgb(205,117,38)" fg:x="27" fg:w="1"/><text x="31.6453%" y="271.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 1.16%)</title><rect x="31.3953%" y="245" width="1.1628%" height="15" fill="rgb(237,72,25)" fg:x="27" fg:w="1"/><text x="31.6453%" y="255.50"></text></g><g><title>ntdll`RtlInitCodePageTable (1 samples, 1.16%)</title><rect x="32.5581%" y="341" width="1.1628%" height="15" fill="rgb(244,70,9)" fg:x="28" fg:w="1"/><text x="32.8081%" y="351.50"></text></g><g><title>ntdll`RtlNotifyFeatureUsage (1 samples, 1.16%)</title><rect x="33.7209%" y="341" width="1.1628%" height="15" fill="rgb(217,125,39)" fg:x="29" fg:w="1"/><text x="33.9709%" y="351.50"></text></g><g><title>ntdll`_misaligned_access (1 samples, 1.16%)</title><rect x="33.7209%" y="325" width="1.1628%" height="15" fill="rgb(235,36,10)" fg:x="29" fg:w="1"/><text x="33.9709%" y="335.50"></text></g><g><title>ntdll`RtlNotifyFeatureUsage (1 samples, 1.16%)</title><rect x="33.7209%" y="309" width="1.1628%" height="15" fill="rgb(251,123,47)" fg:x="29" fg:w="1"/><text x="33.9709%" y="319.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 1.16%)</title><rect x="33.7209%" y="293" width="1.1628%" height="15" fill="rgb(221,13,13)" fg:x="29" fg:w="1"/><text x="33.9709%" y="303.50"></text></g><g><title>ntdll`ZwAllocateVirtualMemoryEx (1 samples, 1.16%)</title><rect x="33.7209%" y="277" width="1.1628%" height="15" fill="rgb(238,131,9)" fg:x="29" fg:w="1"/><text x="33.9709%" y="287.50"></text></g><g><title>ntdll`RtlSidDominates (1 samples, 1.16%)</title><rect x="34.8837%" y="341" width="1.1628%" height="15" fill="rgb(211,50,8)" fg:x="30" fg:w="1"/><text x="35.1337%" y="351.50"></text></g><g><title>ntdll`ZwFreeVirtualMemory (1 samples, 1.16%)</title><rect x="34.8837%" y="325" width="1.1628%" height="15" fill="rgb(245,182,24)" fg:x="30" fg:w="1"/><text x="35.1337%" y="335.50"></text></g><g><title>ntdll`LdrInitializeThunk (32 samples, 37.21%)</title><rect x="0.0000%" y="389" width="37.2093%" height="15" fill="rgb(242,14,37)" fg:x="0" fg:w="32"/><text x="0.2500%" y="399.50">ntdll`LdrInitializeThunk</text></g><g><title>ntdll`EtwLogTraceEvent (32 samples, 37.21%)</title><rect x="0.0000%" y="373" width="37.2093%" height="15" fill="rgb(246,228,12)" fg:x="0" fg:w="32"/><text x="0.2500%" y="383.50">ntdll`EtwLogTraceEvent</text></g><g><title>ntdll`EtwLogTraceEvent (32 samples, 37.21%)</title><rect x="0.0000%" y="357" width="37.2093%" height="15" fill="rgb(213,55,15)" fg:x="0" fg:w="32"/><text x="0.2500%" y="367.50">ntdll`EtwLogTraceEvent</text></g><g><title>ntdll`RtlUnicodeToMultiByteN (1 samples, 1.16%)</title><rect x="36.0465%" y="341" width="1.1628%" height="15" fill="rgb(209,9,3)" fg:x="31" fg:w="1"/><text x="36.2965%" y="351.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 1.16%)</title><rect x="36.0465%" y="325" width="1.1628%" height="15" fill="rgb(230,59,30)" fg:x="31" fg:w="1"/><text x="36.2965%" y="335.50"></text></g><g><title>ntdll`LdrResolveDelayLoadedAPI (1 samples, 1.16%)</title><rect x="36.0465%" y="309" width="1.1628%" height="15" fill="rgb(209,121,21)" fg:x="31" fg:w="1"/><text x="36.2965%" y="319.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (1 samples, 1.16%)</title><rect x="36.0465%" y="293" width="1.1628%" height="15" fill="rgb(220,109,13)" fg:x="31" fg:w="1"/><text x="36.2965%" y="303.50"></text></g><g><title>ntdll`RtlInitUTF8String (1 samples, 1.16%)</title><rect x="36.0465%" y="277" width="1.1628%" height="15" fill="rgb(232,18,1)" fg:x="31" fg:w="1"/><text x="36.2965%" y="287.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (1 samples, 1.16%)</title><rect x="36.0465%" y="261" width="1.1628%" height="15" fill="rgb(215,41,42)" fg:x="31" fg:w="1"/><text x="36.2965%" y="271.50"></text></g><g><title>ntdll`RtlImageRvaToSection (1 samples, 1.16%)</title><rect x="36.0465%" y="245" width="1.1628%" height="15" fill="rgb(224,123,36)" fg:x="31" fg:w="1"/><text x="36.2965%" y="255.50"></text></g><g><title>ntdll`LdrFindResource_U (1 samples, 1.16%)</title><rect x="36.0465%" y="229" width="1.1628%" height="15" fill="rgb(240,125,3)" fg:x="31" fg:w="1"/><text x="36.2965%" y="239.50"></text></g><g><title>ntdll`LdrGetDllHandleEx (1 samples, 1.16%)</title><rect x="36.0465%" y="213" width="1.1628%" height="15" fill="rgb(205,98,50)" fg:x="31" fg:w="1"/><text x="36.2965%" y="223.50"></text></g><g><title>ntdll`RtlReleaseSRWLockExclusive (1 samples, 1.16%)</title><rect x="36.0465%" y="197" width="1.1628%" height="15" fill="rgb(205,185,37)" fg:x="31" fg:w="1"/><text x="36.2965%" y="207.50"></text></g><g><title>ntdll`LdrInitializeThunk (33 samples, 38.37%)</title><rect x="0.0000%" y="405" width="38.3721%" height="15" fill="rgb(238,207,15)" fg:x="0" fg:w="33"/><text x="0.2500%" y="415.50">ntdll`LdrInitializeThunk</text></g><g><title>ntdll`RtlMoveMemory (1 samples, 1.16%)</title><rect x="37.2093%" y="389" width="1.1628%" height="15" fill="rgb(213,199,42)" fg:x="32" fg:w="1"/><text x="37.4593%" y="399.50"></text></g><g><title>ntdll`ZwCreateEvent (1 samples, 1.16%)</title><rect x="37.2093%" y="373" width="1.1628%" height="15" fill="rgb(235,201,11)" fg:x="32" fg:w="1"/><text x="37.4593%" y="383.50"></text></g><g><title>KernelBase`SetThreadStackGuarantee (1 samples, 1.16%)</title><rect x="43.0233%" y="325" width="1.1628%" height="15" fill="rgb(207,46,11)" fg:x="37" fg:w="1"/><text x="43.2733%" y="335.50"></text></g><g><title>compiler-utils`compiler_utils::parser::parsers::leaves::tag::closure$0 (6 samples, 6.98%)</title><rect x="50.0000%" y="229" width="6.9767%" height="15" fill="rgb(241,35,35)" fg:x="43" fg:w="6"/><text x="50.2500%" y="239.50">compiler-..</text></g><g><title>compiler-utils`compiler_utils::parser::walker::FileWalker::span_from_marker_to_here (4 samples, 4.65%)</title><rect x="52.3256%" y="213" width="4.6512%" height="15" fill="rgb(243,32,47)" fg:x="45" fg:w="4"/><text x="52.5756%" y="223.50">compi..</text></g><g><title>compiler-utils`compiler_utils::parser::walker::FileWalker::get_marker (1 samples, 1.16%)</title><rect x="56.9767%" y="229" width="1.1628%" height="15" fill="rgb(247,202,23)" fg:x="49" fg:w="1"/><text x="57.2267%" y="239.50"></text></g><g><title>compiler-utils`compiler_utils::parser::walker::FileWalker::span_from_marker_to_here (1 samples, 1.16%)</title><rect x="58.1395%" y="229" width="1.1628%" height="15" fill="rgb(219,102,11)" fg:x="50" fg:w="1"/><text x="58.3895%" y="239.50"></text></g><g><title>compiler-utils`compiler_utils::parser::walker::FileWalker::step (2 samples, 2.33%)</title><rect x="59.3023%" y="229" width="2.3256%" height="15" fill="rgb(243,110,44)" fg:x="51" fg:w="2"/><text x="59.5523%" y="239.50">c..</text></g><g><title>compiler-utils`compiler_utils::parser::walker::FileWalker::span_from_marker_to_here (1 samples, 1.16%)</title><rect x="69.7674%" y="197" width="1.1628%" height="15" fill="rgb(222,74,54)" fg:x="60" fg:w="1"/><text x="70.0174%" y="207.50"></text></g><g><title>compiler-utils`compiler_utils::parser::parsers::leaves::tag::closure$0 (8 samples, 9.30%)</title><rect x="63.9535%" y="213" width="9.3023%" height="15" fill="rgb(216,99,12)" fg:x="55" fg:w="8"/><text x="64.2035%" y="223.50">compiler-util..</text></g><g><title>compiler-utils`compiler_utils::parser::walker::FileWalker::step (2 samples, 2.33%)</title><rect x="70.9302%" y="197" width="2.3256%" height="15" fill="rgb(226,22,26)" fg:x="61" fg:w="2"/><text x="71.1802%" y="207.50">c..</text></g><g><title>compiler-utils`compiler_utils::parser::walker::FileWalker::pop_back (1 samples, 1.16%)</title><rect x="73.2558%" y="213" width="1.1628%" height="15" fill="rgb(217,163,10)" fg:x="63" fg:w="1"/><text x="73.5058%" y="223.50"></text></g><g><title>compiler-utils`compiler_utils::parser::parsers::leaves::tag::closure$0 (3 samples, 3.49%)</title><rect x="75.5814%" y="197" width="3.4884%" height="15" fill="rgb(213,25,53)" fg:x="65" fg:w="3"/><text x="75.8314%" y="207.50">com..</text></g><g><title>compiler-utils`compiler_utils::parser::walker::FileWalker::span_from_marker_to_here (2 samples, 2.33%)</title><rect x="76.7442%" y="181" width="2.3256%" height="15" fill="rgb(252,105,26)" fg:x="66" fg:w="2"/><text x="76.9942%" y="191.50">c..</text></g><g><title>compiler-utils`compiler_utils::parser::walker::FileWalker::pop_back (3 samples, 3.49%)</title><rect x="79.0698%" y="197" width="3.4884%" height="15" fill="rgb(220,39,43)" fg:x="68" fg:w="3"/><text x="79.3198%" y="207.50">com..</text></g><g><title>compiler-utils`compiler_utils::parser::walker::FileWalker::step (1 samples, 1.16%)</title><rect x="82.5581%" y="197" width="1.1628%" height="15" fill="rgb(229,68,48)" fg:x="71" fg:w="1"/><text x="82.8081%" y="207.50"></text></g><g><title>compiler-utils`compiler_utils::parser::walker::FileWalker::get_marker (1 samples, 1.16%)</title><rect x="84.8837%" y="181" width="1.1628%" height="15" fill="rgb(252,8,32)" fg:x="73" fg:w="1"/><text x="85.1337%" y="191.50"></text></g><g><title>compiler-utils`main (38 samples, 44.19%)</title><rect x="43.0233%" y="357" width="44.1860%" height="15" fill="rgb(223,20,43)" fg:x="37" fg:w="38"/><text x="43.2733%" y="367.50">compiler-utils`main</text></g><g><title>compiler-utils`std::rt::lang_start_internal (38 samples, 44.19%)</title><rect x="43.0233%" y="341" width="44.1860%" height="15" fill="rgb(229,81,49)" fg:x="37" fg:w="38"/><text x="43.2733%" y="351.50">compiler-utils`std::rt::lang_start_internal</text></g><g><title>compiler-utils`std::rt::lang_start::closure$0&lt;tuple$ (37 samples, 43.02%)</title><rect x="44.1860%" y="325" width="43.0233%" height="15" fill="rgb(236,28,36)" fg:x="38" fg:w="37"/><text x="44.4360%" y="335.50">compiler-utils`std::rt::lang_start::closure$0&lt;tuple$</text></g><g><title>compiler-utils`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$ (37 samples, 43.02%)</title><rect x="44.1860%" y="309" width="43.0233%" height="15" fill="rgb(249,185,26)" fg:x="38" fg:w="37"/><text x="44.4360%" y="319.50">compiler-utils`std::sys_common::backtrace::__rust_begin_short_backtrac..</text></g><g><title>compiler-utils`compiler_utils::main (37 samples, 43.02%)</title><rect x="44.1860%" y="293" width="43.0233%" height="15" fill="rgb(249,174,33)" fg:x="38" fg:w="37"/><text x="44.4360%" y="303.50">compiler-utils`compiler_utils::main</text></g><g><title>compiler-utils`compiler_utils::tag_pair (37 samples, 43.02%)</title><rect x="44.1860%" y="277" width="43.0233%" height="15" fill="rgb(233,201,37)" fg:x="38" fg:w="37"/><text x="44.4360%" y="287.50">compiler-utils`compiler_utils::tag_pair</text></g><g><title>compiler-utils`compiler_utils::tag_pair (37 samples, 43.02%)</title><rect x="44.1860%" y="261" width="43.0233%" height="15" fill="rgb(221,78,26)" fg:x="38" fg:w="37"/><text x="44.4360%" y="271.50">compiler-utils`compiler_utils::tag_pair</text></g><g><title>compiler-utils`compiler_utils::tag_pair (37 samples, 43.02%)</title><rect x="44.1860%" y="245" width="43.0233%" height="15" fill="rgb(250,127,30)" fg:x="38" fg:w="37"/><text x="44.4360%" y="255.50">compiler-utils`compiler_utils::tag_pair</text></g><g><title>compiler-utils`compiler_utils::tag_pair (22 samples, 25.58%)</title><rect x="61.6279%" y="229" width="25.5814%" height="15" fill="rgb(230,49,44)" fg:x="53" fg:w="22"/><text x="61.8779%" y="239.50">compiler-utils`compiler_utils::tag_pair</text></g><g><title>compiler-utils`compiler_utils::tag_pair (11 samples, 12.79%)</title><rect x="74.4186%" y="213" width="12.7907%" height="15" fill="rgb(229,67,23)" fg:x="64" fg:w="11"/><text x="74.6686%" y="223.50">compiler-utils`comp..</text></g><g><title>compiler-utils`compiler_utils::tag_pair (3 samples, 3.49%)</title><rect x="83.7209%" y="197" width="3.4884%" height="15" fill="rgb(249,83,47)" fg:x="72" fg:w="3"/><text x="83.9709%" y="207.50">com..</text></g><g><title>compiler-utils`compiler_utils::tag_pair (1 samples, 1.16%)</title><rect x="86.0465%" y="181" width="1.1628%" height="15" fill="rgb(215,43,3)" fg:x="74" fg:w="1"/><text x="86.2965%" y="191.50"></text></g><g><title>compiler-utils`compiler_utils::parser::parsers::leaves::tag::closure$0 (1 samples, 1.16%)</title><rect x="86.0465%" y="165" width="1.1628%" height="15" fill="rgb(238,154,13)" fg:x="74" fg:w="1"/><text x="86.2965%" y="175.50"></text></g><g><title>ntdll`RtlCopyUnicodeString (1 samples, 1.16%)</title><rect x="87.2093%" y="229" width="1.1628%" height="15" fill="rgb(219,56,2)" fg:x="75" fg:w="1"/><text x="87.4593%" y="239.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (1 samples, 1.16%)</title><rect x="87.2093%" y="213" width="1.1628%" height="15" fill="rgb(233,0,4)" fg:x="75" fg:w="1"/><text x="87.4593%" y="223.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (1 samples, 1.16%)</title><rect x="87.2093%" y="197" width="1.1628%" height="15" fill="rgb(235,30,7)" fg:x="75" fg:w="1"/><text x="87.4593%" y="207.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (1 samples, 1.16%)</title><rect x="87.2093%" y="181" width="1.1628%" height="15" fill="rgb(250,79,13)" fg:x="75" fg:w="1"/><text x="87.4593%" y="191.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 1.16%)</title><rect x="87.2093%" y="165" width="1.1628%" height="15" fill="rgb(211,146,34)" fg:x="75" fg:w="1"/><text x="87.4593%" y="175.50"></text></g><g><title>msvcrt`wfindnexti64 (1 samples, 1.16%)</title><rect x="87.2093%" y="149" width="1.1628%" height="15" fill="rgb(228,22,38)" fg:x="75" fg:w="1"/><text x="87.4593%" y="159.50"></text></g><g><title>msvcrt`write (1 samples, 1.16%)</title><rect x="87.2093%" y="133" width="1.1628%" height="15" fill="rgb(235,168,5)" fg:x="75" fg:w="1"/><text x="87.4593%" y="143.50"></text></g><g><title>msvcrt`setmbcp (1 samples, 1.16%)</title><rect x="87.2093%" y="117" width="1.1628%" height="15" fill="rgb(221,155,16)" fg:x="75" fg:w="1"/><text x="87.4593%" y="127.50"></text></g><g><title>msvcrt`setmbcp (1 samples, 1.16%)</title><rect x="87.2093%" y="101" width="1.1628%" height="15" fill="rgb(215,215,53)" fg:x="75" fg:w="1"/><text x="87.4593%" y="111.50"></text></g><g><title>msvcrt`write (1 samples, 1.16%)</title><rect x="87.2093%" y="85" width="1.1628%" height="15" fill="rgb(223,4,10)" fg:x="75" fg:w="1"/><text x="87.4593%" y="95.50"></text></g><g><title>msvcrt`strerror_s (1 samples, 1.16%)</title><rect x="87.2093%" y="69" width="1.1628%" height="15" fill="rgb(234,103,6)" fg:x="75" fg:w="1"/><text x="87.4593%" y="79.50"></text></g><g><title>msvcrt`strerror_s (1 samples, 1.16%)</title><rect x="87.2093%" y="53" width="1.1628%" height="15" fill="rgb(227,97,0)" fg:x="75" fg:w="1"/><text x="87.4593%" y="63.50"></text></g><g><title>msvcrt`setjmpex (1 samples, 1.16%)</title><rect x="87.2093%" y="37" width="1.1628%" height="15" fill="rgb(234,150,53)" fg:x="75" fg:w="1"/><text x="87.4593%" y="47.50"></text></g><g><title>ntdll`LdrLoadDll (1 samples, 1.16%)</title><rect x="88.3721%" y="197" width="1.1628%" height="15" fill="rgb(228,201,54)" fg:x="76" fg:w="1"/><text x="88.6221%" y="207.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 1.16%)</title><rect x="88.3721%" y="181" width="1.1628%" height="15" fill="rgb(222,22,37)" fg:x="76" fg:w="1"/><text x="88.6221%" y="191.50"></text></g><g><title>ntdll`NtQueryAttributesFile (1 samples, 1.16%)</title><rect x="88.3721%" y="165" width="1.1628%" height="15" fill="rgb(237,53,32)" fg:x="76" fg:w="1"/><text x="88.6221%" y="175.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (1 samples, 1.16%)</title><rect x="89.5349%" y="149" width="1.1628%" height="15" fill="rgb(233,25,53)" fg:x="77" fg:w="1"/><text x="89.7849%" y="159.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (2 samples, 2.33%)</title><rect x="89.5349%" y="181" width="2.3256%" height="15" fill="rgb(210,40,34)" fg:x="77" fg:w="2"/><text x="89.7849%" y="191.50">n..</text></g><g><title>ntdll`RtlImageNtHeaderEx (2 samples, 2.33%)</title><rect x="89.5349%" y="165" width="2.3256%" height="15" fill="rgb(241,220,44)" fg:x="77" fg:w="2"/><text x="89.7849%" y="175.50">n..</text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 1.16%)</title><rect x="90.6977%" y="149" width="1.1628%" height="15" fill="rgb(235,28,35)" fg:x="78" fg:w="1"/><text x="90.9477%" y="159.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (1 samples, 1.16%)</title><rect x="90.6977%" y="133" width="1.1628%" height="15" fill="rgb(210,56,17)" fg:x="78" fg:w="1"/><text x="90.9477%" y="143.50"></text></g><g><title>ntdll`LdrAddRefDll (1 samples, 1.16%)</title><rect x="90.6977%" y="117" width="1.1628%" height="15" fill="rgb(224,130,29)" fg:x="78" fg:w="1"/><text x="90.9477%" y="127.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 1.16%)</title><rect x="90.6977%" y="101" width="1.1628%" height="15" fill="rgb(235,212,8)" fg:x="78" fg:w="1"/><text x="90.9477%" y="111.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 1.16%)</title><rect x="90.6977%" y="85" width="1.1628%" height="15" fill="rgb(223,33,50)" fg:x="78" fg:w="1"/><text x="90.9477%" y="95.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 1.16%)</title><rect x="90.6977%" y="69" width="1.1628%" height="15" fill="rgb(219,149,13)" fg:x="78" fg:w="1"/><text x="90.9477%" y="79.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 1.16%)</title><rect x="90.6977%" y="53" width="1.1628%" height="15" fill="rgb(250,156,29)" fg:x="78" fg:w="1"/><text x="90.9477%" y="63.50"></text></g><g><title>compiler-utils`__scrt_common_main_seh (43 samples, 50.00%)</title><rect x="43.0233%" y="373" width="50.0000%" height="15" fill="rgb(216,193,19)" fg:x="37" fg:w="43"/><text x="43.2733%" y="383.50">compiler-utils`__scrt_common_main_seh</text></g><g><title>ucrtbase`exit (5 samples, 5.81%)</title><rect x="87.2093%" y="357" width="5.8140%" height="15" fill="rgb(216,135,14)" fg:x="75" fg:w="5"/><text x="87.4593%" y="367.50">ucrtbas..</text></g><g><title>ucrtbase`exit (5 samples, 5.81%)</title><rect x="87.2093%" y="341" width="5.8140%" height="15" fill="rgb(241,47,5)" fg:x="75" fg:w="5"/><text x="87.4593%" y="351.50">ucrtbas..</text></g><g><title>ucrtbase`mbsicmp_l (5 samples, 5.81%)</title><rect x="87.2093%" y="325" width="5.8140%" height="15" fill="rgb(233,42,35)" fg:x="75" fg:w="5"/><text x="87.4593%" y="335.50">ucrtbas..</text></g><g><title>ucrtbase`o_iswascii (5 samples, 5.81%)</title><rect x="87.2093%" y="309" width="5.8140%" height="15" fill="rgb(231,13,6)" fg:x="75" fg:w="5"/><text x="87.4593%" y="319.50">ucrtbas..</text></g><g><title>KernelBase`LoadLibraryExW (5 samples, 5.81%)</title><rect x="87.2093%" y="293" width="5.8140%" height="15" fill="rgb(207,181,40)" fg:x="75" fg:w="5"/><text x="87.4593%" y="303.50">KernelB..</text></g><g><title>ntdll`LdrLoadDll (5 samples, 5.81%)</title><rect x="87.2093%" y="277" width="5.8140%" height="15" fill="rgb(254,173,49)" fg:x="75" fg:w="5"/><text x="87.4593%" y="287.50">ntdll`L..</text></g><g><title>ntdll`RtlUnicodeToCustomCPN (5 samples, 5.81%)</title><rect x="87.2093%" y="261" width="5.8140%" height="15" fill="rgb(221,1,38)" fg:x="75" fg:w="5"/><text x="87.4593%" y="271.50">ntdll`R..</text></g><g><title>ntdll`RtlImageRvaToSection (5 samples, 5.81%)</title><rect x="87.2093%" y="245" width="5.8140%" height="15" fill="rgb(206,124,46)" fg:x="75" fg:w="5"/><text x="87.4593%" y="255.50">ntdll`R..</text></g><g><title>ntdll`RtlQueryPerformanceCounter (4 samples, 4.65%)</title><rect x="88.3721%" y="229" width="4.6512%" height="15" fill="rgb(249,21,11)" fg:x="76" fg:w="4"/><text x="88.6221%" y="239.50">ntdll..</text></g><g><title>ntdll`RtlQueryPerformanceCounter (4 samples, 4.65%)</title><rect x="88.3721%" y="213" width="4.6512%" height="15" fill="rgb(222,201,40)" fg:x="76" fg:w="4"/><text x="88.6221%" y="223.50">ntdll..</text></g><g><title>ntdll`RtlQueryPerformanceCounter (3 samples, 3.49%)</title><rect x="89.5349%" y="197" width="3.4884%" height="15" fill="rgb(235,61,29)" fg:x="77" fg:w="3"/><text x="89.7849%" y="207.50">ntd..</text></g><g><title>ntdll`NtOpenFile (1 samples, 1.16%)</title><rect x="91.8605%" y="181" width="1.1628%" height="15" fill="rgb(219,207,3)" fg:x="79" fg:w="1"/><text x="92.1105%" y="191.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (1 samples, 1.16%)</title><rect x="93.0233%" y="309" width="1.1628%" height="15" fill="rgb(222,56,46)" fg:x="80" fg:w="1"/><text x="93.2733%" y="319.50"></text></g><g><title>ntdll`LdrLoadDll (2 samples, 2.33%)</title><rect x="94.1860%" y="277" width="2.3256%" height="15" fill="rgb(239,76,54)" fg:x="81" fg:w="2"/><text x="94.4360%" y="287.50">n..</text></g><g><title>ntdll`RtlAddressInSectionTable (2 samples, 2.33%)</title><rect x="94.1860%" y="261" width="2.3256%" height="15" fill="rgb(231,124,27)" fg:x="81" fg:w="2"/><text x="94.4360%" y="271.50">n..</text></g><g><title>ntdll`NtQueryAttributesFile (2 samples, 2.33%)</title><rect x="94.1860%" y="245" width="2.3256%" height="15" fill="rgb(249,195,6)" fg:x="81" fg:w="2"/><text x="94.4360%" y="255.50">n..</text></g><g><title>ntdll`LdrGetDllHandleByMapping (3 samples, 3.49%)</title><rect x="94.1860%" y="293" width="3.4884%" height="15" fill="rgb(237,174,47)" fg:x="81" fg:w="3"/><text x="94.4360%" y="303.50">ntd..</text></g><g><title>ntdll`RtlSetSecurityObject (1 samples, 1.16%)</title><rect x="96.5116%" y="277" width="1.1628%" height="15" fill="rgb(206,201,31)" fg:x="83" fg:w="1"/><text x="96.7616%" y="287.50"></text></g><g><title>ntdll`LdrGetDllPath (1 samples, 1.16%)</title><rect x="96.5116%" y="261" width="1.1628%" height="15" fill="rgb(231,57,52)" fg:x="83" fg:w="1"/><text x="96.7616%" y="271.50"></text></g><g><title>ntdll`LdrGetDllPath (1 samples, 1.16%)</title><rect x="96.5116%" y="245" width="1.1628%" height="15" fill="rgb(248,177,22)" fg:x="83" fg:w="1"/><text x="96.7616%" y="255.50"></text></g><g><title>ntdll`RtlWakeConditionVariable (1 samples, 1.16%)</title><rect x="96.5116%" y="229" width="1.1628%" height="15" fill="rgb(215,211,37)" fg:x="83" fg:w="1"/><text x="96.7616%" y="239.50"></text></g><g><title>ntdll`RtlWakeConditionVariable (1 samples, 1.16%)</title><rect x="96.5116%" y="213" width="1.1628%" height="15" fill="rgb(241,128,51)" fg:x="83" fg:w="1"/><text x="96.7616%" y="223.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 1.16%)</title><rect x="96.5116%" y="197" width="1.1628%" height="15" fill="rgb(227,165,31)" fg:x="83" fg:w="1"/><text x="96.7616%" y="207.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 1.16%)</title><rect x="96.5116%" y="181" width="1.1628%" height="15" fill="rgb(228,167,24)" fg:x="83" fg:w="1"/><text x="96.7616%" y="191.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 1.16%)</title><rect x="97.6744%" y="277" width="1.1628%" height="15" fill="rgb(228,143,12)" fg:x="84" fg:w="1"/><text x="97.9244%" y="287.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 1.16%)</title><rect x="97.6744%" y="261" width="1.1628%" height="15" fill="rgb(249,149,8)" fg:x="84" fg:w="1"/><text x="97.9244%" y="271.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 1.16%)</title><rect x="97.6744%" y="245" width="1.1628%" height="15" fill="rgb(243,35,44)" fg:x="84" fg:w="1"/><text x="97.9244%" y="255.50"></text></g><g><title>all (86 samples, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(246,89,9)" fg:x="0" fg:w="86"/><text x="0.2500%" y="431.50"></text></g><g><title>ntdll`RtlUserThreadStart (53 samples, 61.63%)</title><rect x="38.3721%" y="405" width="61.6279%" height="15" fill="rgb(233,213,13)" fg:x="33" fg:w="53"/><text x="38.6221%" y="415.50">ntdll`RtlUserThreadStart</text></g><g><title>kernel32`BaseThreadInitThunk (49 samples, 56.98%)</title><rect x="43.0233%" y="389" width="56.9767%" height="15" fill="rgb(233,141,41)" fg:x="37" fg:w="49"/><text x="43.2733%" y="399.50">kernel32`BaseThreadInitThunk</text></g><g><title>ntdll`RtlClearThreadWorkOnBehalfTicket (6 samples, 6.98%)</title><rect x="93.0233%" y="373" width="6.9767%" height="15" fill="rgb(239,167,4)" fg:x="80" fg:w="6"/><text x="93.2733%" y="383.50">ntdll`Rtl..</text></g><g><title>ntdll`RtlHashUnicodeString (6 samples, 6.98%)</title><rect x="93.0233%" y="357" width="6.9767%" height="15" fill="rgb(209,217,16)" fg:x="80" fg:w="6"/><text x="93.2733%" y="367.50">ntdll`Rtl..</text></g><g><title>ntdll`RtlQueryPerformanceCounter (6 samples, 6.98%)</title><rect x="93.0233%" y="341" width="6.9767%" height="15" fill="rgb(219,88,35)" fg:x="80" fg:w="6"/><text x="93.2733%" y="351.50">ntdll`Rtl..</text></g><g><title>ntdll`RtlQueryPerformanceCounter (6 samples, 6.98%)</title><rect x="93.0233%" y="325" width="6.9767%" height="15" fill="rgb(220,193,23)" fg:x="80" fg:w="6"/><text x="93.2733%" y="335.50">ntdll`Rtl..</text></g><g><title>ntdll`RtlQueryPerformanceCounter (5 samples, 5.81%)</title><rect x="94.1860%" y="309" width="5.8140%" height="15" fill="rgb(230,90,52)" fg:x="81" fg:w="5"/><text x="94.4360%" y="319.50">ntdll`R..</text></g><g><title>ntdll`RtlQueryPerformanceCounter (2 samples, 2.33%)</title><rect x="97.6744%" y="293" width="2.3256%" height="15" fill="rgb(252,106,19)" fg:x="84" fg:w="2"/><text x="97.9244%" y="303.50">n..</text></g><g><title>ntdll`NtOpenFile (1 samples, 1.16%)</title><rect x="98.8372%" y="277" width="1.1628%" height="15" fill="rgb(206,74,20)" fg:x="85" fg:w="1"/><text x="99.0872%" y="287.50"></text></g></svg></svg>